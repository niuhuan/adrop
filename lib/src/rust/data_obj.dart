// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'data_obj/enums.dart';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Device {
  final String name;
  final String folderFileId;
  final int deviceType;

  const Device({
    required this.name,
    required this.folderFileId,
    required this.deviceType,
  });

  @override
  int get hashCode =>
      name.hashCode ^ folderFileId.hashCode ^ deviceType.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Device &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          folderFileId == other.folderFileId &&
          deviceType == other.deviceType;
}

class LoginInfo {
  final LoginState state;

  const LoginInfo({
    required this.state,
  });

  @override
  int get hashCode => state.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LoginInfo &&
          runtimeType == other.runtimeType &&
          state == other.state;
}

class ReceivingTask {
  final String taskId;
  final String driveId;
  final String fileId;
  final String fileName;
  final String filePath;
  final FileItemType fileItemType;
  final ReceivingTaskState taskState;
  final String errorMsg;

  const ReceivingTask({
    required this.taskId,
    required this.driveId,
    required this.fileId,
    required this.fileName,
    required this.filePath,
    required this.fileItemType,
    required this.taskState,
    required this.errorMsg,
  });

  @override
  int get hashCode =>
      taskId.hashCode ^
      driveId.hashCode ^
      fileId.hashCode ^
      fileName.hashCode ^
      filePath.hashCode ^
      fileItemType.hashCode ^
      taskState.hashCode ^
      errorMsg.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ReceivingTask &&
          runtimeType == other.runtimeType &&
          taskId == other.taskId &&
          driveId == other.driveId &&
          fileId == other.fileId &&
          fileName == other.fileName &&
          filePath == other.filePath &&
          fileItemType == other.fileItemType &&
          taskState == other.taskState &&
          errorMsg == other.errorMsg;
}

class SelectionFile {
  final String name;
  final String path;
  final FileItemType fileItemType;

  const SelectionFile({
    required this.name,
    required this.path,
    required this.fileItemType,
  });

  @override
  int get hashCode => name.hashCode ^ path.hashCode ^ fileItemType.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SelectionFile &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          path == other.path &&
          fileItemType == other.fileItemType;
}

class SendingTask {
  final String taskId;
  final Device device;
  final String fileName;
  final String filePath;
  final FileItemType fileItemType;
  final SendingTaskState taskState;
  final SendingTaskErrorType errorType;
  final String errorMsg;
  final String cloudFileId;
  final PlatformInt64 currentFileUploadSize;
  final SendingTaskType sendingTaskType;
  final List<SelectionFile> packSelectionFiles;
  final String tmpFilePath;

  const SendingTask({
    required this.taskId,
    required this.device,
    required this.fileName,
    required this.filePath,
    required this.fileItemType,
    required this.taskState,
    required this.errorType,
    required this.errorMsg,
    required this.cloudFileId,
    required this.currentFileUploadSize,
    required this.sendingTaskType,
    required this.packSelectionFiles,
    required this.tmpFilePath,
  });

  @override
  int get hashCode =>
      taskId.hashCode ^
      device.hashCode ^
      fileName.hashCode ^
      filePath.hashCode ^
      fileItemType.hashCode ^
      taskState.hashCode ^
      errorType.hashCode ^
      errorMsg.hashCode ^
      cloudFileId.hashCode ^
      currentFileUploadSize.hashCode ^
      sendingTaskType.hashCode ^
      packSelectionFiles.hashCode ^
      tmpFilePath.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SendingTask &&
          runtimeType == other.runtimeType &&
          taskId == other.taskId &&
          device == other.device &&
          fileName == other.fileName &&
          filePath == other.filePath &&
          fileItemType == other.fileItemType &&
          taskState == other.taskState &&
          errorType == other.errorType &&
          errorMsg == other.errorMsg &&
          cloudFileId == other.cloudFileId &&
          currentFileUploadSize == other.currentFileUploadSize &&
          sendingTaskType == other.sendingTaskType &&
          packSelectionFiles == other.packSelectionFiles &&
          tmpFilePath == other.tmpFilePath;
}

class SpaceInfo {
  final String driveId;
  final String devicesRootFolderFileId;
  final String thisDeviceFolderFileId;
  final String truePassBase64;

  const SpaceInfo({
    required this.driveId,
    required this.devicesRootFolderFileId,
    required this.thisDeviceFolderFileId,
    required this.truePassBase64,
  });

  @override
  int get hashCode =>
      driveId.hashCode ^
      devicesRootFolderFileId.hashCode ^
      thisDeviceFolderFileId.hashCode ^
      truePassBase64.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SpaceInfo &&
          runtimeType == other.runtimeType &&
          driveId == other.driveId &&
          devicesRootFolderFileId == other.devicesRootFolderFileId &&
          thisDeviceFolderFileId == other.thisDeviceFolderFileId &&
          truePassBase64 == other.truePassBase64;
}
