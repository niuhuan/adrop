// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../data_obj.dart';
import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `clear`, `map`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `eq`, `fmt`

Future<SpaceInfo?> spaceInfo() => RustLib.instance.api.crateApiSpaceSpaceInfo();

Future<AdriveUserGetDriveInfo> oauthDeriveInfo() =>
    RustLib.instance.api.crateApiSpaceOauthDeriveInfo();

class AdriveUserGetDriveInfo {
  final String userId;
  final String name;
  final String avatar;
  final String defaultDriveId;
  final String? resourceDriveId;
  final String? backupDriveId;

  const AdriveUserGetDriveInfo({
    required this.userId,
    required this.name,
    required this.avatar,
    required this.defaultDriveId,
    this.resourceDriveId,
    this.backupDriveId,
  });

  static Future<AdriveUserGetDriveInfo> default_() =>
      RustLib.instance.api.crateApiSpaceAdriveUserGetDriveInfoDefault();

  @override
  int get hashCode =>
      userId.hashCode ^
      name.hashCode ^
      avatar.hashCode ^
      defaultDriveId.hashCode ^
      resourceDriveId.hashCode ^
      backupDriveId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AdriveUserGetDriveInfo &&
          runtimeType == other.runtimeType &&
          userId == other.userId &&
          name == other.name &&
          avatar == other.avatar &&
          defaultDriveId == other.defaultDriveId &&
          resourceDriveId == other.resourceDriveId &&
          backupDriveId == other.backupDriveId;
}
